'From Squeak5.1 of 5 September 2016 [latest update: #16549] on 8 March 2018 at 11:58:45 am'!Object subclass: #TestHardness	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'BinTree-BinTree'!!TestHardness methodsFor: 'as yet unclassified' stamp: 'zs 3/8/2018 09:47'!testIterative| nodea nodeb nodec noded nodee nodef nodeg theTree traversal nextLabel |nodea := BinTree new: 'A'.nodeb := BinTree new: 'B'.nodec := BinTree new: 'C'.noded := BinTree new: 'D'.nodee := BinTree new: 'E'.nodef := BinTree new: 'F'.nodeg := BinTree new: 'G'.nodea addLeftKid: nodeb.nodea addRightKid: nodec.nodeb addLeftKid: noded.nodeb addRightKid: nodee.nodec addLeftKid: nodef.nodec addRightKid: nodeg.theTree := nodea.traversal := InorderTraversal new: theTree.nextLabel := traversal first.[nextLabel = nil] whileFalse: [	Transcript show: (nextLabel value); cr.	nextLabel := traversal next.	].! !!TestHardness methodsFor: 'as yet unclassified' stamp: 'zs 3/7/2018 11:48'!testIterative2| nodea nodeb nodec theTree traversal nextLabel |nodea := BinTree new: 'A'.nodec := BinTree new: 'C'.nodeb := BinTree new: 'B'.nodea addLeftKid: nodec.nodec addRightKid: nodeb.theTree := nodea.traversal := InorderTraversal new: theTree.nextLabel := traversal first.[nextLabel = nil] whileFalse: [	Transcript show: (nextLabel value); cr.	nextLabel := traversal next.	].! !!TestHardness methodsFor: 'as yet unclassified' stamp: 'zs 3/7/2018 11:40'!testRecursive| nodea nodeb nodec noded nodee nodef nodeg nodeh nodei theTree traversal |nodea := BinTree new: 'A'.nodeb := BinTree new: 'B'.nodec := BinTree new: 'C'.noded := BinTree new: 'D'.nodee := BinTree new: 'E'.nodef := BinTree new: 'F'.nodeg := BinTree new: 'G'.nodeh :=BinTree new: 'H'.nodei := BinTree new: 'I'.nodef addRightKid: nodeg.nodef addLeftKid: nodeb.nodeb addLeftKid: nodea.nodeb addRightKid: noded.noded addLeftKid: nodec.noded addRightKid: nodee.nodeg addRightKid: nodei.nodei addLeftKid: nodeh.theTree := nodef.traversal := InorderTraversal new: theTree.traversal recursiveTraversal: theTree.! !!TestHardness methodsFor: 'as yet unclassified' stamp: 'zs 3/8/2018 09:54'!testRecursive2| nodea nodeb nodec noded nodee nodef nodeg theTree traversal |nodea := BinTree new: 'A'.nodeb := BinTree new: 'B'.nodec := BinTree new: 'C'.noded := BinTree new: 'D'.nodee := BinTree new: 'E'.nodef := BinTree new: 'F'.nodeg := BinTree new: 'G'.nodea addRightKid: nodeb.nodeb addRightKid: nodec.nodec addRightKid: noded.noded addRightKid: nodee.nodeb addLeftKid: nodef.nodef addLeftKid: nodeg.theTree := nodea.traversal := InorderTraversal new: theTree.traversal recursiveTraversal: theTree.! !